#!/usr/bin/env ruby
# frozen_string_literal: true

fractions = [2, 4, 8, 16, 32, 5, 10]

records = []

def inch_to_mm(inch)
  inch * 25.4
end

fractions.each do |denominator|
  (1..denominator).each do |numerator|
    record = {}
    record[denominator] = "#{numerator}/#{denominator}"
    record[:decimal] = numerator.to_f / denominator
    record[:mm] = inch_to_mm(numerator.to_f / denominator)
    records << record
  end
end

(1..25).each do |mm|
  record = { mm: }
  record[:decimal] = mm.to_f / 25.4
  records << record
end

rows = records
       .group_by { |x| x[:mm] }
       .map do |_, matching|
         row = {}
         matching.each do |record|
           record.each do |key, value|
             row[key] = value
           end
         end
         row
       end
       .sort_by { |row| row[:mm] }

puts '<table>'

puts '<thead>'
puts '<tr>'
fractions.each do |denominator|
  puts "<th>/#{denominator}</th>"
end
puts '<th>Decimal</th>'
puts '<th>Millimeters</th>'
puts '</tr>'
puts '</thead>'

puts '<tbody>'
rows.each do |row|
  puts '<tr>'
  fractions.each do |denominator|
    value = row[denominator]
    if value.nil?
      print '<td>'
    else
      print "<td id='#{value}'>"
    end
    print value
    puts '</td>'
  end
  puts "<td>#{row[:decimal]}</td>"
  mm = row[:mm]
  if (mm % 1).zero?
    print "<td id='#{mm}mm'>"
  else
    print '<td>'
  end
  puts "#{row[:mm]}</td>"
  puts '</tr>'
end
puts '</tbody>'

puts '</table>'
